apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "hercules.telegraf.fullname" . }}
  labels:
    {{- include "hercules.labels" . | nindent 4 }}
data:
  telegraf.conf: |+
    #[agent]
    #  debug = true
{{- if .Values.influxdb.enabled }}
    [[outputs.influxdb]]
      urls = ["http://{{ include "hercules.influxdb.fullname" . }}:8086"]
      database = "herculesdb"
      username = "hercules"
      password = {{ .Values.influxdb.userPassword | quote }}
      skip_database_creation = true
{{- if and .Values.mqttServices.internet.enabled .Values.mqttServices.internet.measurementName }}
      # Exclude string-value topics from internet measurement
      [outputs.influxdb.tagdrop]
        topic = ["{{ .Values.mqttServices.internet.topicPrefix }}timestamp", "{{ .Values.mqttServices.internet.topicPrefix }}server/*"]

{{- end }}
{{- else if .Values.external_influxdb_v2.enabled }}
    [[outputs.influxdb_v2]]
      urls = [{{ .Values.external_influxdb_v2.url | quote }}]
      token = {{ .Values.external_influxdb_v2.token | quote }}
      organization = {{ .Values.external_influxdb_v2.organization | quote }}
      bucket = {{ .Values.external_influxdb_v2.bucket | quote }}
{{- if and .Values.mqttServices.internet.enabled .Values.mqttServices.internet.measurementName }}
      # Exclude string-value topics from internet measurement
      [outputs.influxdb_v2.tagdrop]
        topic = ["{{ .Values.mqttServices.internet.topicPrefix }}timestamp", "{{ .Values.mqttServices.internet.topicPrefix }}server/*"]

{{- end }}
{{- end }}
    [[inputs.mqtt_consumer]]
      servers = ["tcp://{{ include "hercules.mosquitto.fullname" . }}:1883"]
      client_id = {{ include "hercules.telegraf.fullname" . | quote }}
      qos = 1
      persistent_session = true
      topics = [
{{- range $key, $val := .Values.mqttServices }}
{{- if and $val.enabled $val.measurementName }}
        "{{ $val.topicPrefix }}+",
{{- end }}
{{- end }}
      ]
      name_override = "unhandled-mqtt-topics"
      data_type = "string"
      data_format = "value"

{{- if and .Values.mqttServices.traffic.enabled .Values.mqttServices.traffic.measurementName }}
    # ===========================================
    # Traffic service
    [[processors.override]]
      order = 1
      alias = "traffic-override"
      namepass = "mqtt_consumer"
      name_override = {{ .Values.mqttServices.traffic.measurementName | quote }}
      [processors.override.tagpass]
        topic = ["{{ .Values.mqttServices.traffic.topicPrefix }}*"]

    [[processors.regex]]
      order = 2
      alias = "traffic-regex"
      namepass = "mqtt_consumer"
      [[processors.regex.fields]]
        key = "value"
        pattern = "^(.*);[0-9]+$"
        replacement = "${1}"
        result_key = "route"
      [[processors.regex.fields]]
        key = "value"
        pattern = "^.*;([0-9]+)$"
        replacement = "${1}"
      [processors.regex.tagpass]
        topic = ["Traffic/Work/Routes"]

    [[processors.converter]]
      order = 3
      alias = "traffic-converter"
      namepass = "mqtt_consumer"
      tagexclude = ["topic"]
      [processors.converter.fields]
        tag = ["route"]
        float = ["value"]
      [processors.converter.tagpass]
        topic = ["Traffic/Work/Routes"]
{{- end }}

{{- if and .Values.mqttServices.internet.enabled .Values.mqttServices.internet.measurementName }}
    # ===========================================
    # Internet service
    [[processors.override]]
      order = 10
      alias = "internet-override"
      namepass = "mqtt_consumer"
      name_override = {{ .Values.mqttServices.internet.measurementName | quote }}
      [processors.override.tagpass]
        topic = ["{{ .Values.mqttServices.internet.topicPrefix }}*"]

    [[processors.converter]]
      order = 11
      alias = "internet-converter"
      namepass = "mqtt_consumer"
      [processors.converter.fields]
        float = ["value"]
      [processors.converter.tagpass]
        topic = ["{{ .Values.mqttServices.internet.topicPrefix }}*"]
      [processors.converter.tagdrop]
        topic = ["{{ .Values.mqttServices.internet.topicPrefix }}timestamp", "{{ .Values.mqttServices.internet.topicPrefix }}server/*"]

{{- end }}

{{- if and .Values.mqttServices.airQuality.enabled .Values.mqttServices.airQuality.measurementName }}
    # ===========================================
    # AirQuality service
    [[processors.override]]
      order = 20
      alias = "airQuality-override"
      namepass = "mqtt_consumer"
      name_override = {{ .Values.mqttServices.airQuality.measurementName | quote }}
      [processors.override.tagpass]
        topic = ["{{ .Values.mqttServices.airQuality.topicPrefix }}*"]

    [[processors.converter]]
      order = 21
      alias = "airQuality-converter"
      namepass = "mqtt_consumer"
      [processors.converter.fields]
        float = ["value"]
      [processors.converter.tagpass]
        topic = ["{{ .Values.mqttServices.airQuality.topicPrefix }}*"]
{{- end }}

{{- if and .Values.mqttServices.bluetooth.enabled .Values.mqttServices.bluetooth.measurementName }}
    # ===========================================
    # Bluetooth service
    # Extract MAC address from topic, set as tag and drop topic tag
    [[processors.override]]
      order = 30
      alias = "bluetooth-override"
      namepass = "mqtt_consumer"
      name_override = {{ .Values.mqttServices.bluetooth.measurementName | quote }}
      [processors.override.tagpass]
        topic = ["{{ .Values.mqttServices.bluetooth.topicPrefix }}*"]

    [[processors.regex]]
      order = 31
      alias = "bluetooth-regex"
      namepass = "mqtt_consumer"
      [[processors.regex.tags]]
        key = "topic"
        pattern = "^{{ .Values.mqttServices.bluetooth.topicPrefix }}(.+)$"
        replacement = "${1}"
        result_key = "mac"
      [processors.regex.tagpass]
        topic = ["{{ .Values.mqttServices.bluetooth.topicPrefix }}*"]

    [[processors.converter]]
      order = 32
      alias = "bluetooth-converter"
      namepass = "mqtt_consumer"
      tagexclude = ["topic"]
      [processors.converter.fields]
        tag = ["mac"]
      [processors.converter.tagpass]
        topic = ["{{ .Values.mqttServices.bluetooth.topicPrefix }}*"]
{{- end }}


{{- if and .Values.mqttServices.motion.enabled .Values.mqttServices.motion.measurementName }}
    # ===========================================
    # Motion service
    # Extract room from topic, set as tag and drop topic tag
    [[processors.override]]
      order = 40
      alias = "motion-override"
      namepass = "mqtt_consumer"
      name_override = {{ .Values.mqttServices.motion.measurementName | quote }}
      [processors.override.tagpass]
        topic = ["{{ .Values.mqttServices.motion.topicPrefix }}*"]

    [[processors.regex]]
      order = 41
      alias = "motion-regex"
      namepass = "mqtt_consumer"
      [[processors.regex.tags]]
        key = "topic"
        pattern = "^{{ .Values.mqttServices.motion.topicPrefix }}(.+)$"
        replacement = "${1}"
        result_key = "room"
      [processors.regex.tagpass]
        topic = ["{{ .Values.mqttServices.motion.topicPrefix }}*"]

    [[processors.converter]]
      order = 42
      alias = "motion-converter"
      namepass = "mqtt_consumer"
      tagexclude = ["topic"]
      [processors.converter.fields]
        tag = ["room"]
        integer = ["value"]
      [processors.converter.tagpass]
        topic = ["{{ .Values.mqttServices.motion.topicPrefix }}*"]
{{- end }}
