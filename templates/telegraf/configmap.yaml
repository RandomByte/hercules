apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "hercules.telegraf.fullname" . }}
  labels:
    {{- include "hercules.labels" . | nindent 4 }}
data:
  telegraf.conf: |+
{{- if .Values.influxdb.enabled }}
    [[outputs.influxdb]]
      urls = ["http://{{ include "hercules.influxdb.fullname" . }}:8086"]
      database = "herculesdb"
      username = "hercules"
      password = {{ .Values.influxdb.userPassword | quote }}
      skip_database_creation = true
{{- else if .Values.external_influxdb_v2.enabled }}
    [[outputs.influxdb_v2]]
      urls = [{{ .Values.external_influxdb_v2.url | quote }}]
      token = {{ .Values.external_influxdb_v2.token | quote }}
      organization = {{ .Values.external_influxdb_v2.organization | quote }}
      bucket = {{ .Values.external_influxdb_v2.bucket | quote }}
{{- end }}
    [[inputs.mqtt_consumer]]
      servers = ["tcp://{{ include "hercules.mosquitto.fullname" . }}:1883"]
      client_id = {{ include "hercules.telegraf.fullname" . | quote }}
      topics = {{ .Values.telegraf.mqttValues.topics }}
      name_override = {{ .Values.telegraf.mqttValues.defaultMeasurementName | quote }}
      data_type = "string"
      data_format = "value"

{{- range .Values.telegraf.mqttValues.subMeasurements }}
    [[processors.converter]]
      namepass = "mqtt_consumer"
      [processors.converter.fields]
        {{ .valueType }} = ["value"]
      [processors.converter.tagpass]
        topic = {{ .influxTopics }}
    [[processors.override]]
      namepass = "mqtt_consumer"
      name_override = {{ .measurementName | quote}}
      [processors.override.tagpass]
        topic = {{ .influxTopics }}
{{- end }}

    # TODO: Hardcoded Traffic/Work/Routes configuration
    [[processors.override]]
      namepass = "mqtt_consumer"
      name_override = "traffic-work"
      [processors.override.tagpass]
        topic = ["Traffic/Work/Routes"]

    [[processors.regex]]
      namepass = "mqtt_consumer"
      [[processors.regex.fields]]
        key = "value"
        pattern = "^(.*);[0-9]+$"
        replacement = "${1}"
        result_key = "route"
      [[processors.regex.fields]]
        key = "value"
        pattern = "^.*;([0-9]+)$"
        replacement = "${1}"
      [processors.regex.tagpass]
        topic = ["Traffic/Work/Routes"]

    [[processors.converter]]
      namepass = "mqtt_consumer"
      tagexclude = ["topic"]
      [processors.converter.fields]
        tag = ["route"]
        float = ["value"]
      [processors.converter.tagpass]
        topic = ["Traffic/Work/Routes"]

    # TODO: Hardcoded Home/Bluetooth/* configuration
    # Extract MAC address from topic, set as tag and drop topic tag
    [[processors.override]]
      namepass = "mqtt_consumer"
      name_override = "home-bluetooth"
      [processors.override.tagpass]
        topic = ["Home/Bluetooth/*"]

    [[processors.regex]]
      namepass = "mqtt_consumer"
      [[processors.regex.tags]]
        key = "topic"
        pattern = "^Home/Bluetooth/(.+)$"
        replacement = "${1}"
        result_key = "mac"
      [processors.regex.tagpass]
        topic = ["Home/Bluetooth/*"]

    [[processors.converter]]
      namepass = "mqtt_consumer"
      tagexclude = ["topic"]
      [processors.converter.fields]
        tag = ["mac"]
      [processors.converter.tagpass]
        topic = ["Home/Bluetooth/*"]


    # TODO: Hardcoded Home/Motion/* configuration
    # Extract room from topic, set as tag and drop topic tag
    [[processors.override]]
      namepass = "mqtt_consumer"
      name_override = "home-motion"
      [processors.override.tagpass]
        topic = ["Home/Motion/*"]

    [[processors.regex]]
      namepass = "mqtt_consumer"
      [[processors.regex.tags]]
        key = "topic"
        pattern = "^Home/Motion/(.+)$"
        replacement = "${1}"
        result_key = "room"
      [processors.regex.tagpass]
        topic = ["Home/Motion/*"]

    [[processors.converter]]
      namepass = "mqtt_consumer"
      tagexclude = ["topic"]
      [processors.converter.fields]
        tag = ["room"]
        integer = ["value"]
      [processors.converter.tagpass]
        topic = ["Home/Motion/*"]
